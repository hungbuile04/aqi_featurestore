version: '3.8'

x-airflow-common: &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.9.2}
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
    _PIP_ADDITIONAL_REQUIREMENTS: ""
  volumes:
    - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags:rw
    - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs:rw
    - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins:rw
    - ${AIRFLOW_PROJ_DIR:-.}/requirements.txt:/requirements.txt:rw  # Ensure write permissions
    - ${AIRFLOW_PROJ_DIR:-.}/.env:/opt/airflow/.env:rw
    - ${AIRFLOW_PROJ_DIR:-.}/google-key.json:/opt/airflow/google-key.json:rw
    - ${AIRFLOW_PROJ_DIR:-.}/start_time.txt:/opt/airflow/start_time.txt:rw
    - /var/run/docker.sock:/var/run/docker.sock:rw
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s

  airflow-scheduler:
    <<: *airflow-common
    command: >
      bash -c "pip install -r /requirements.txt && airflow scheduler"
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - exec /entrypoint airflow version
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_MIGRATE: 'true'
    user: "0:0"
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}:/sources

volumes:
  postgres-db-volume: